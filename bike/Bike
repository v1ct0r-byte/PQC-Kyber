                                        NOTES ON BIKE KEY ENCAPSULATION MECHANISM

This document is a collection of explanations and instructions on the proposed solution to model and analyze the protocol.
Author: Víctor García Valero <vicgarv2@upv.es>

------------------------------------------------------------------------------------------------------------------------
COMMANDS

    Loading modules:

    load bike/bike.maude
    load model-checker.maude
    load bike/bike-PREDS.maude
    load bike/bike-CHECK.maude

    --- MODEL CHECKING

    --- FAIRNESS
    red modelCheck(initial1, ([]<> wantsToShareKey(Alice,Bob)) -> ([]<> sharedAKeyWith(Alice,Bob))) .
    red modelCheck(initial2, ([]<> wantsToShareKey(Alice,Bob)) -> ([]<> sharedAKeyWith(Alice,Bob))) .
    red modelCheck(initial1, []<> (wantsToShareKey(Alice,Bob) -> <> sharedAKeyWith(Alice,Bob)))
    red modelCheck(initial2, []<> (wantsToShareKey(Alice,Bob) -> <> sharedAKeyWith(Alice,Bob))) .

    --- KEY SHARING
    red modelCheck(initial1, [](wantsToShareKey(Alice,Bob) -> <> sharedAKeyWith(Alice,Bob))) .
    red modelCheck(initial2, [](wantsToShareKey(Alice,Bob) -> <> sharedAKeyWith(Alice,Bob))) .
    
    --- SECRECY
    red modelCheck(initial1, ([] ~ stolenSharedKey(Alice,Eve))) .
    red modelCheck(initial1, ([] ~ stolenSharedKey(Bob,Eve))) .
    red modelCheck(initial2, ([] ~ stolenSharedKey(Alice,Eve))) .
    red modelCheck(initial2, ([] ~ stolenSharedKey(Bob,Eve))) .
    
    select BIKE .

    --- SEARCH
    --- Agreement search
    search init1 =>! { CONT4:Content } < (Alice[sharedKey(Bob,K1:SKey) ; KS1]CONT1) (Bob[sharedKey(Alice,K1:SKey) ; KS2]CONT2) PS >net(MSGS) .
    --- MITM Attack search
    search init1 =>! { CONT4:Content } < (ID1[sharedKey(ID3,K1:SKey) ; KS1]CONT1) (ID2[sharedKey(ID1,K1:SKey) ; sharedKey(ID3,K2:SKey) ; KS2]CONT2) (ID3[sharedKey(ID1,K2:SKey) ; KS3]CONT3) >net(MSGS) .

    --- Agreement search
    search init2 =>! { CONT4:Content } < (Alice[sharedKey(Bob,K1:SKey) ; KS1]CONT1) (Bob[sharedKey(Alice,K1:SKey) ; KS2]CONT2) PS >net(MSGS) .
    --- MITM Attack search
    search [1] init2 =>! { CONT4:Content } < (ID1[sharedKey(ID3,K1:SKey) ; KS1]CONT1) (ID2[sharedKey(ID1,K1:SKey) ; sharedKey(ID3,K2:SKey) ; KS2]CONT2) (ID3[sharedKey(ID1,K2:SKey) ; KS3]CONT3) >net(MSGS) .

    --- Identity Attack search
    search init1 =>! {CONT4:Content} < (Eve[sharedKey(Bob,K1:SKey) ; KS1]CONT1) (Bob[sharedKey(Alice,K1:SKey) ; KS2]CONT2) PS >net(MSGS) .
    search init2 =>! {CONT4:Content} < (Eve[sharedKey(Bob,K1:SKey) ; KS1]CONT1) (Bob[sharedKey(Alice,K1:SKey) ; KS2]CONT2) PS >net(MSGS) .
------------------------------------------------------------------------------------------------------------------------